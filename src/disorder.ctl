; input
(define-param no-struc? true)
(use-output-directory "output")
(set! eps-averaging? true)
(define-param rot 0)
(define rot (* (/ rot 180) pi))

; load in positions from disorder script in R
(define xx #(-1758 -1172 -586 0 586 1172 1758 -2051 -1465 -879 -293 293 879 1465 2051 -1758 -1172 -586 0 586 1172 1758 -2051 -1465 -879 -293 293 879 1465 2051 -1758 -1172 -586 0 586 1172 1758))
(define yy #(1014.98177323536 1014.98177323536 1014.98177323536 1014.98177323536 1014.98177323536 1014.98177323536 1014.98177323536 507.490886617681 507.490886617681 507.490886617681 507.490886617681 507.490886617681 507.490886617681 507.490886617681 507.490886617681 0 0 0 0 0 0 0 -507.490886617681 -507.490886617681 -507.490886617681 -507.490886617681 -507.490886617681 -507.490886617681 -507.490886617681 -507.490886617681 -1014.98177323536 -1014.98177323536 -1014.98177323536 -1014.98177323536 -1014.98177323536 -1014.98177323536 -1014.98177323536))
(define r1 #(166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5 166.5))
;(define r1 #(167.885747300531 171.998269469768 158.917930168868 170.256290411786 169.757350049412 161.268668363302 161.298268369446 168.194111040572 169.877939389274 159.027131159278 169.300892716181 171.05645321086 161.909533076675 172.012403849617 168.064246153494 169.63392893197 165.212197149731 169.313883257518 159.746986229508 159.214662673068 173.166950032732 161.968118767126 163.530699462129 163.783535238693 162.867328944895 158.335422796919 172.334002971207 162.696911032288 172.482231661084 163.091111324052 163.116372194735 159.903113987634 172.718631572218 168.584478275443 171.675320408621 168.117871532764 164.739065158402))
;(define r1 #(156.458199682413 164.754470727942 169.674218951399 168.093599319085 179.378626217041 172.361049181293 179.66930508404 181.867861712817 164.560594790918 154.253794257576 155.903910960839 151.885329787689 152.002823308809 178.728052622848 155.22906880863 158.477212911844 159.420340770436 159.938998212945 158.331758559519 170.820816515177 168.781431826553 152.721903045243 159.150836042175 154.689340562839 161.87731930688 163.742951599415 175.841586481221 161.568593028258 177.942858710303 153.137421368505 177.771627434157 160.336252413201 169.867949227919 164.948165230919 172.658480331791 176.387297313334 154.262319510151))
;(define r1 #(167.150236373884 186.965370585804 186.476921365585 170.55159947552 144.18545497146 163.659357247967 153.944964062003 187.287262524781 186.091421542328 146.765149202698 186.869999632635 169.283275664784 185.532090080786 141.995930139022 151.855683595373 146.410537415359 162.616998898052 165.489587133809 164.55469153208 153.684866732906 164.821307182289 164.428013087728 145.709945766488 147.348261290195 154.788857164979 163.197894060903 150.571831135964 170.188260955503 186.325582819688 173.034220870282 173.289095064299 182.75389841107 150.806174851418 184.81217310077 160.555745688686 181.909191204119 144.269044159236))
;(define r1 #(154.328853432275 162.587351345038 166.129999649897 173.823114181263 137.265457695862 134.685522202542 182.364720010757 174.42955636438 155.084777267044 150.894857737469 192.652366835251 165.754879744397 136.94467848544 198.874519352987 170.661537928926 140.431279742159 185.036556109507 185.67435999848 185.965136230923 174.326995149907 155.629749663128 136.21725686104 139.413074705796 198.941824507434 152.210635142215 188.518143193144 142.062751055835 153.983332125703 169.073708756827 146.497084258776 182.364268212765 153.140336261038 179.80994966249 178.492951398343 142.179229837982 153.997356703877 182.896931005362))
;(define r1 #(207.396047854854 152.415761978889 135.079290339199 135.640808499302 129.030789789569 170.942871430598 204.327141242218 133.937188964803 155.657063228893 187.413784989039 133.554198290454 158.512980683183 128.503949540493 139.682414626877 185.053606781352 180.099658197316 174.048788735876 152.741423301108 194.891066818906 198.0339266269 170.184309021744 194.150205142389 153.916026149411 136.33495317644 162.140771983482 195.523573482642 200.206245214446 160.360060462437 163.937084188743 166.162307420222 171.170724248223 168.482337888563 203.692614951055 174.775635463768 156.843627594179 145.333206235897 197.545770340366))
;(define r1 #(212.04649230293 155.122355397558 118.19418390838 141.726668467722 133.23959213295 207.576229894138 150.809122330905 178.285447904351 184.587921106629 120.021613142104 205.675050918362 165.238950557937 163.414118395094 173.128817400662 209.002766260458 168.317627747962 136.100502155861 156.635512491991 213.927530168882 149.779628803208 207.682640462858 162.5741219335 187.294322682498 182.900989651121 151.741781993117 124.741251318692 145.708829506324 123.509585446632 175.73062515955 198.783605722105 214.000785245164 142.128856067592 120.958901965991 186.542912935512 202.714472872135 151.840734336223 185.505927502038))
(define r2 #(293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293 293)) 

; size of cell
(define sx0 4.018)  ; width of original image
(define sy0 1.988)  ; height of original image
(define sx (+ 2 sx0))
(define sy (+ 7 sy0))

; source characteristics
(define fcen 2.4)
(define df 4)
(define nfreq 200)

; material properties
(define-param eps1 5.00)  ; permittivity of material 1 (low index)
(define-param eps2 5.00)  ; permittivity of material 2 (high index)
(define-param k1 0)  ; extinction coeff mat 1
(define-param k2 0)  ; extincion coeff mat 2
(define mat1 (make medium (epsilon eps1) (D-conductivity (/ (* 2 pi fcen (* 2 (sqrt eps1) k1)) eps1))))
(define mat2 (make medium (epsilon eps2) (D-conductivity (/ (* 2 pi fcen (* 2 (sqrt eps2) k2)) eps2))))
(set! default-material mat1)

; creates geom at given x,y coords
(define (doit x x-max dx)
	(if (<= x x-max)
 	  (begin
		(set! geometry (append geometry
			(list 
				(make cylinder 
					(center 
						(+ (* (/ (vector-ref xx x) 1000) (cos rot)) (* (/ (vector-ref yy x) 1000) (sin rot)))
						(+ (* (* (/ (vector-ref xx x) 1000) -1) (sin rot)) (* (/ (vector-ref yy x) 1000) (cos rot))))
					(radius (/ (vector-ref r2 x) 1000)) (height infinity)
  					(material mat2))
  				(make cylinder 
					(center 
						(+ (* (/ (vector-ref xx x) 1000) (cos rot)) (* (/ (vector-ref yy x) 1000) (sin rot)))
						(+ (* (* (/ (vector-ref xx x) 1000) -1) (sin rot)) (* (/ (vector-ref yy x) 1000) (cos rot))))
					(radius (/ (vector-ref r1 x) 1000)) (height infinity)
  					(material air))
  					)))
		(doit (+ x dx) x-max dx))))


; define geometry
(set! geometry-lattice (make lattice (size sx sy no-size)))
(if no-struc?
	(set! geometry (list 
		(make block (center 0 0) (size sx sy infinity) (material mat1))))
	(doit 0 36 1)) ; do loop from a to b in steps of dx


; excite sources
(set! sources (list
	 (make source
	  (src (make gaussian-src (frequency fcen) (fwidth df)))
	    (component Hz)
		(center 0 (- (* 0.5 sy) 1))
		(size sx 0))))
(set! pml-layers (list (make pml (thickness 1.0))))
;(set! pml-layers (list (make pml (direction Y) (thickness 1.0)))) ; only on y extremes


; misc settings
(define-param res 50)
(set! resolution res)
;(set! k-point (vector3 0 0 0))
;(set! ensure-periodicity true)


; define flux regions (planes)
(define refl ; reflected flux
	(add-flux fcen df nfreq
	 (make flux-region
	  (center 0 (- (* 0.5 sy) 2)) (size sx 0))))
(define trans ; transmitted flux
	(add-flux fcen df nfreq
	 (make flux-region
	 (center 0 (+ (* -0.5 sy) 1)) (size sx 0)))) ; changed from (* sy2)


; run
(if (not no-struc?) (load-minus-flux "refl-flux" refl))

(run-sources+
	(stop-when-fields-decayed 50 Hz
		(vector3 0 (+ (* -0.5 sy) 1))
		1e-2)
	(at-beginning output-epsilon)
	(at-end (output-png Hz "-Zc bluered"))
	)
;(run-until 20
;	(at-beginning output-epsilon)
;	(at-every 1 (output-png Hz "-Zc bluered -C $EPS"))
;	(at-end output-efield-z))


; output stuff
(if no-struc? (save-flux "refl-flux" refl))
(display-fluxes trans refl) ; print out the flux spectrum
